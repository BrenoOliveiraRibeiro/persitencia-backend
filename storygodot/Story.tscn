extends Control

@onready var url_input: LineEdit = %LineEdit
@onready var img_rect: TextureRect = %TextureRect
@onready var label: Label = %Label
@onready var http: HTTPRequest = %HTTPRequest

var part := 1

func _ready():
    var saved = ProjectSettings.get_setting("application/config/story_base_url", "")
    if saved != "": url_input.text = saved
    load_part(part)

func _on_save_url_pressed():
    var base = url_input.text.strip_edges().rstrip("/")
    ProjectSettings.set_setting("application/config/story_base_url", base)
    ProjectSettings.save()

func base_url() -> String:
    return str(ProjectSettings.get_setting("application/config/story_base_url", ""))

func goto(p:int):
    part = clamp(p,1,3)
    load_part(part)

func load_part(p:int):
    var base = base_url()
    if base == "":
        label.text = "Defina a URL base e salve."
        return
    _get_text("%s/part%d.txt" % [base, p], func(text):
        label.text = text
    )
    _get_bytes("%s/part%d.jpg" % [base, p], func(data):
        var img := Image.new()
        var err := img.load_jpg_from_buffer(data)
        if err != OK:
            label.text += "\n[Erro ao carregar imagem]"
            img_rect.texture = null
            return
        var tex := ImageTexture.create_from_image(img)
        img_rect.texture = tex
    )

func _get_text(url:String, cb):
    http.request(url)
    await http.request_completed
    var body = http.get_body()
    cb(body.get_string_from_utf8())

func _get_bytes(url:String, cb):
    http.request(url)
    await http.request_completed
    cb(http.get_body())
